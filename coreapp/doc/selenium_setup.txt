# Goal:       Get Selenium & Selenium RC up and running beside the spokes
# Author:     Arthur Klepchukov
# Created:    08/19/2009
# Modified:   08/19/2009

# 0. put yourself in the right place (wherever Outspokes is on the system)
    cd RAILS_ROOT


# 1. Get and unwrap Selenium RC
# (from http://seleniumhq.org/download/)

    wget http://release.seleniumhq.org/selenium-remote-control/1.0.1/selenium-remote-control-1.0.1-dist.zip
    unzip selenium-remote-control-1.0.1


# 2. Copy the server jar to a logical place in your Rails app

    mkdir vendor/selenium-remote-control
    cp selenium-remote-control-1.0.1/selenium-server-1.0.1/selenium-server.jar vendor/selenium-remote-control/


# 3. Install the Selenium Client gem so you can talk to Selenium RC using Ruby

    sudo gem install selenium-client

# in config/environment.rb:
# config.gem 'selenium-client', :lib => 'selenium/client'


# OPTIONAL: test what you have so far works

    java -jar vendor/selenium-remote-control/selenium-server.jar

    # Put the following in ~/try.rb:
    
    # START OF FILE #######################################################
    
    #!/usr/bin/env ruby
    #
    # Sample Ruby script using the Selenium client API
    #
    require "rubygems"
    require "selenium/client"
    
    begin
      @browser = Selenium::Client::Driver.new \
          :host => "localhost",
          :port => 4444,
          :browser => "*firefox",
          :url => "http://www.google.com",
          :timeout_in_second => 60

      @browser.start_new_browser_session
        @browser.open "/"
        @browser.type "q", "Selenium seleniumhq.org"
        @browser.click "btnG", :wait_for => :page
        puts @browser.text?("seleniumhq.org")
    ensure
      @browser.close_current_browser_session
    end
    
    # END OF FILE #########################################################
    
    ruby ~/try.rb

    # You should see Firefox open, go to Google.com, do a search, and close
    # The server process should end with something like: 
    #    Got result: OK on session 5e16317d22a441afb731c13b319c5ba4

    # If you see any errors or different behavior, consult Selenium site: http://seleniumhq.org/


# 4. Create rake tasks to start and stop the server
# from: http://selenium-client.rubyforge.org/classes/Selenium/Rake/RemoteControlStartTask.html
# and: http://selenium-client.rubyforge.org/classes/Selenium/Rake/RemoteControlStopTask.html
# in lib/tasks/selenium.rake:
    
    require ‘selenium/rake/tasks‘
    
    # selenium:rc:start
    Selenium::Rake::RemoteControlStartTask.new do |rc| 
      rc.port = 4444
      rc.timeout_in_seconds = 3 * 60
      rc.background = true
      rc.wait_until_up_and_running = true
      rc.jar_file = File.join(RAILS_ROOT + "/vendor/selenium-remote-control/selenium-server.jar")
    end
    
    # selenium:rc:stop
    Selenium::Rake::RemoteControlStopTask.new do |rc| 
      rc.host = "localhost"
      rc.port = 4444
      rc.timeout_in_seconds = 3 * 60
    end


# 5. Make a special subclass of Test::Unit::TestCase for your Selenium tests
