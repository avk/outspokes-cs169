function() {
  
  return (function(fb){
    var $ = fb.$;
    if (fb.env && fb.env.init) {
      return true;
    }
    
    fb.env = {};
    fb.env.current_page = window.location.href.split("?")[0].split("#")[0].replace(/(\/)$/, "");
    fb.env.url_token = fb.getParams('url_token') || fb.cookie('fb_hash_url_token') || "";
    var _admin_validation_token = fb.cookie('fb_hash_admin_validation_token');
    var _wants_admin = fb.getParams('admin');
    fb.env.base_domain = "<%= CONFIG.url %>/";
    fb.env.logo_address = "<%= CONFIG.url %>/images/widget-logo.png";
    fb.env.collapse_address = "<%= CONFIG.url %>/images/collapse.png";
    fb.env.uncollapse_address = "<%= CONFIG.url %>/images/uncollapse.png";
    fb.env.target_address = "<%= CONFIG.url %>/images/target-icon.png";
    fb.env.get_address = "<%= CONFIG.url %>/feedback_for_page.js";
    fb.env.post_address = "<%= CONFIG.url %>/post_feedback_for_page";
    fb.env.opinion_address = "<%= CONFIG.url %>/opinion_on_feedback";
    fb.env.css_address = "<%= CONFIG.url %>/stylesheets/widget.css";
    fb.env.get_user_styles_address = "<%= CONFIG.url %>/widget/user_styles";
    fb.env.post_user_style_address = "<%= CONFIG.url %>/widget/user_styles";
    fb.env.user_style_address = function(id) {
      return "<%= CONFIG.url %>/widget/user_styles/" + id + ".css";
    };
    fb.env.design_css_address = "<%= CONFIG.url %>/stylesheets/userstyles.css";
    fb.env.destroy_address = "<%= CONFIG.url %>/delete_feedback";
    // will be set properly in the callback if authorized as the admin
    fb.env.admin_panel_address = null;
    fb.env.first_visit = (fb.cookie('fb_hash_url_token')) ? false : true;
    fb.env.juggernaut_iframe_address = "<%= CONFIG.url %>/juggernaut.html?"
    
    fb.$('head').append('<link rel="stylesheet" type="text/css" href="' + fb.env.css_address + '" />');
    fb.$('head').append('<link rel="stylesheet" type="text/css" href="' + fb.env.design_css_address + '" />');

    // Animated graphic showing that our widget is loading
    fb.loading_wrapper = fb.$('<div></div>').attr('id','outspokes_loading_wrapper');
    fb.done_loading = false;
    
    fb.bookmarklet = <%= @bookmarklet %>;
    
    var loading = function() {
      // callback which is supposed to remove what this creates has already executed
      if (fb.done_loading) {
        return;
      }
      var loading_img = null;
      // shows a different version based on if the widget was previously collapsed or expanded
      if (fb.get_state("widget_position") === "up") {
        fb.loading_wrapper.addClass("outspokes_widget_up");
        loading_img = fb.$('<img src="<%= CONFIG.url %>/images/loading.gif" alt="loading Outspokes..." />').attr('id','outspokes_loading');
      } else {
        fb.loading_wrapper.addClass("outspokes_widget_down");
        loading_img = fb.$('<img src="<%= CONFIG.url %>/images/loading.gif" height="28" width="28" alt="loading Outspokes..." />').attr('id','outspokes_loading');
      }

      // Adding the animated graphic to the page (before fb.Interface is added)
      fb.loading_wrapper.append(loading_img);
      if (fb.env.url_token !== "") {
        fb.$('body').append(fb.loading_wrapper);
      }      
    };
    
    // fires when the page loads (i.e. Outspokes installed on a page you control)
    $(function() { loading(); });
    // fires after the loads (i.e. Outspokes installed via bookmarklet)
    if (fb.bookmarklet) { loading(); } 

    // DO NOT USE THIS!!!!!
    // This is only for convenience in testing, and should never be
    // using in the JS
    fb.env.get = function (key) {
      return _fb[key]();
    };

    var method = fb.rand_string(50);
    var login_callback = fb.find_fb() + "." + method;
    fb[method] = function (data) {
      fb.done_loading = true;
      // remove the loading graphic because the data and interface are ready to be loaded
      fb.loading_wrapper.remove();

      fb[method] = null;
      delete fb[method];
      if (!data) {
        fb.env.init = true;
        return false;
      }

      if (!data.authorized) {
        if (fb.env.login_panel) {
          fb.env.login_panel.find('div:eq(1)').empty();
          fb.env.login_panel.find('div:eq(1)').append("<h2 style='text-align:center;'>Login invalid.</h2>");
          setTimeout("" + fb.find_fb() + ".env.login_panel.remove(); " + fb.find_fb() + "()", 3000);
          return false;
        } else if (_admin_validation_token) {
          fb.cookie('fb_hash_admin_validation_token', null, {expires: -365});
          setTimeout("" + fb.find_fb() + "()", 0);
          return false;
        }
        fb.env.init = true;
        return false;
      }
      _fb.authorized.set(data.authorized);
      _fb.page_id.set(data.page_id);

      if (fb.env.login_panel) {
        fb.env.login_panel.remove();
        delete fb.env['login_panel'];
      }

      if (data.admin) {
        _fb.admin.set(data.admin);
        if (typeof _fb.admin() === "string") {
          fb.cookie('fb_hash_admin_validation_token', _fb.admin());
        }
        _fb.site_id.set(data.site_id);
        fb.env.admin_panel_address = {};
        fb.env.admin_panel_address.pages = "<%= CONFIG.url %>/admin_panel/" + _fb.site_id() + '/' +  _fb.admin() + "/pages";
        fb.env.admin_panel_address.commenters = "<%= CONFIG.url %>/admin_panel/" + _fb.site_id() + '/' +  _fb.admin() + "/commenters";
      }

      fb.cookie("fb_hash_url_token", fb.env.url_token);

      fb.i = new fb.Interface();
      fb.Comment.get_callback(data, true);
      if (data.no_commenters && fb.env.first_visit) {
        fb.i.admin_panel.set_to_commenters();
        fb.i.admin_panel.show();
      }
      // Collapse all comments by default
      fb.i.comment.collapse_all();
      
      // Load in which tab was last used
      var current_tab = fb.get_state("widget_tab");
      var widget_position = fb.get_state("widget_position");
      if (current_tab !== undefined && current_tab !== null) {
        fb.i.nav.elements.list[current_tab].click();
        
        if (current_tab !== 1) {
          fb.UserStyle.get();
        }
      } else {
        fb.UserStyle.get();
      }
      
      // Bring widget up or down depending on state
      if (widget_position == "up") {
        fb.i.show_widget(false);
      } else if (widget_position == "down") {
        fb.i.hide_widget(false);
      }
      
      return true;
    };

    if (!_admin_validation_token && _wants_admin) {
      
      var admin_login = function() {
        var first_time_admin = false;
        if (fb.getParams('admin_intro') === 'true') {
          first_time_admin = true;
          // drop what triggers the admin introduction from the URL, so it doesn't get bookmarked
          window.location = (window.location + "").replace(/&admin_intro=true/, '');
        }
        
        var login_panel = fb.$('<div></div>').attr('id','outspokes_login_panel_wrapper');
        login_panel.append(fb.$('<div></div>').attr('id','outspokes_login_panel_background'));
        var inner_login_panel = fb.$('<div></div>').attr('id','outspokes_login_panel_inner');
        if (first_time_admin) {
          inner_login_panel.addClass('outspokes_first_time_admin');
        }
        login_panel.append(inner_login_panel);

        var form = fb.$('<form onsubmit="return false;"></form>');
        
        form.append('<img src="' + fb.env.logo_address + '" height="20" width="100" alt="Outspokes" style="display:block; margin: 3px auto;">');
        
        if (first_time_admin) {
          form.append("You've installed the feedback widget! <strong style='color:#C1272D'>Bookmark this page</strong></a> to quickly access your feedback.");
          // form.append("You've successfully installed the feedback widget! ");
          // var bkmrk = $("<a href='#'><strong>Bookmark this page</strong></a>");
          // bkmrk.click(function() {
          //   var title = 'Outspokes admin: ' + document.title;
          //   var url = (window.location + "").replace(/&admin_intro=true/, ''); // don't save the intro
          //   
          //   // FIX: Firefox only
          //   window.sidebar.addPanel(title, url, "");
          //   return false;
          // });
          // form.append(bkmrk);
          // form.append(" to quickly access your feedback on this site.");
        }
        form.append('<hr />');
        
        var form_fields = $('<div></div>').attr('id','outspokes_login_fields');
        form_fields.append('<label for="outspokes_email">Admin Email</label><br /><input type="text" id="outspokes_email" name="email" size="20" /><br />');
        form_fields.append('<label for="outspokes_password">Admin Password</label><br /><input type="password" id="outspokes_password" name="password" size="20" /><br />');
        form_fields.append('<input type="submit" value="Log in" style="margin-top: .7em" />');
        form.submit(function() {
          var _email = this.email.value;
          var _password = this.password.value;
          fb.env.login_panel = login_panel;
          fb.Comment.get({'email':_email,'password':_password}, login_callback);
          return false;
        });
        form.append(form_fields);

        login_panel.find('div:eq(1)').append(form);
        fb.$('body').append(login_panel);
        return;
      }
      
      // fires when the page loads (i.e. Outspokes installed on a page you control)
      fb.$(function() { admin_login() });
      // fires after the loads (i.e. Outspokes installed via bookmarklet)
      if (fb.bookmarklet) { admin_login(); }
      
      return;
    }

    if (typeof _admin_validation_token === "string") {
      fb.Comment.get({'validation_token':_admin_validation_token}, login_callback);
      return;
    }
    
    fb.Comment.get(login_callback);
    return;
